// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.2
// source: merchant.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateMerchantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateMerchantRequest) Reset() {
	*x = CreateMerchantRequest{}
	mi := &file_merchant_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMerchantRequest) ProtoMessage() {}

func (x *CreateMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMerchantRequest.ProtoReflect.Descriptor instead.
func (*CreateMerchantRequest) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMerchantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMerchantRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateMerchantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantId    int32                  `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	UserId        int32                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMerchantRequest) Reset() {
	*x = UpdateMerchantRequest{}
	mi := &file_merchant_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMerchantRequest) ProtoMessage() {}

func (x *UpdateMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMerchantRequest.ProtoReflect.Descriptor instead.
func (*UpdateMerchantRequest) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateMerchantRequest) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *UpdateMerchantRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateMerchantRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateMerchantRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MerchantResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ApiKey        string                 `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	UserId        int32                  `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantResponse) Reset() {
	*x = MerchantResponse{}
	mi := &file_merchant_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantResponse) ProtoMessage() {}

func (x *MerchantResponse) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantResponse.ProtoReflect.Descriptor instead.
func (*MerchantResponse) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{2}
}

func (x *MerchantResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantResponse) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *MerchantResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MerchantResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MerchantResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MerchantResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type MerchantResponseDeleteAt struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Id            int32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ApiKey        string                  `protobuf:"bytes,3,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	Status        string                  `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	UserId        int32                   `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CreatedAt     string                  `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                  `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt     *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantResponseDeleteAt) Reset() {
	*x = MerchantResponseDeleteAt{}
	mi := &file_merchant_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantResponseDeleteAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantResponseDeleteAt) ProtoMessage() {}

func (x *MerchantResponseDeleteAt) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantResponseDeleteAt.ProtoReflect.Descriptor instead.
func (*MerchantResponseDeleteAt) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{3}
}

func (x *MerchantResponseDeleteAt) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantResponseDeleteAt) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MerchantResponseDeleteAt) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

func (x *MerchantResponseDeleteAt) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MerchantResponseDeleteAt) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MerchantResponseDeleteAt) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MerchantResponseDeleteAt) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *MerchantResponseDeleteAt) GetDeletedAt() *wrapperspb.StringValue {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type MerchantTransactionResponse struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	Id              int32                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CardNumber      string                  `protobuf:"bytes,2,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	Amount          int32                   `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	PaymentMethod   string                  `protobuf:"bytes,4,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	MerchantId      int32                   `protobuf:"varint,5,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	MerchantName    string                  `protobuf:"bytes,6,opt,name=merchant_name,json=merchantName,proto3" json:"merchant_name,omitempty"`
	TransactionTime string                  `protobuf:"bytes,7,opt,name=transaction_time,json=transactionTime,proto3" json:"transaction_time,omitempty"`
	CreatedAt       string                  `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       string                  `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt       *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MerchantTransactionResponse) Reset() {
	*x = MerchantTransactionResponse{}
	mi := &file_merchant_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantTransactionResponse) ProtoMessage() {}

func (x *MerchantTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantTransactionResponse.ProtoReflect.Descriptor instead.
func (*MerchantTransactionResponse) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{4}
}

func (x *MerchantTransactionResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MerchantTransactionResponse) GetCardNumber() string {
	if x != nil {
		return x.CardNumber
	}
	return ""
}

func (x *MerchantTransactionResponse) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MerchantTransactionResponse) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *MerchantTransactionResponse) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *MerchantTransactionResponse) GetMerchantName() string {
	if x != nil {
		return x.MerchantName
	}
	return ""
}

func (x *MerchantTransactionResponse) GetTransactionTime() string {
	if x != nil {
		return x.TransactionTime
	}
	return ""
}

func (x *MerchantTransactionResponse) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MerchantTransactionResponse) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *MerchantTransactionResponse) GetDeletedAt() *wrapperspb.StringValue {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type MerchantResponseMonthlyPaymentMethod struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         string                 `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	PaymentMethod string                 `protobuf:"bytes,2,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	TotalAmount   int64                  `protobuf:"varint,3,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantResponseMonthlyPaymentMethod) Reset() {
	*x = MerchantResponseMonthlyPaymentMethod{}
	mi := &file_merchant_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantResponseMonthlyPaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantResponseMonthlyPaymentMethod) ProtoMessage() {}

func (x *MerchantResponseMonthlyPaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantResponseMonthlyPaymentMethod.ProtoReflect.Descriptor instead.
func (*MerchantResponseMonthlyPaymentMethod) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{5}
}

func (x *MerchantResponseMonthlyPaymentMethod) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *MerchantResponseMonthlyPaymentMethod) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *MerchantResponseMonthlyPaymentMethod) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type MerchantResponseYearlyPaymentMethod struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          string                 `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	PaymentMethod string                 `protobuf:"bytes,2,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	TotalAmount   int64                  `protobuf:"varint,3,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantResponseYearlyPaymentMethod) Reset() {
	*x = MerchantResponseYearlyPaymentMethod{}
	mi := &file_merchant_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantResponseYearlyPaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantResponseYearlyPaymentMethod) ProtoMessage() {}

func (x *MerchantResponseYearlyPaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantResponseYearlyPaymentMethod.ProtoReflect.Descriptor instead.
func (*MerchantResponseYearlyPaymentMethod) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{6}
}

func (x *MerchantResponseYearlyPaymentMethod) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *MerchantResponseYearlyPaymentMethod) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *MerchantResponseYearlyPaymentMethod) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type MerchantResponseMonthlyAmount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         string                 `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	TotalAmount   int64                  `protobuf:"varint,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantResponseMonthlyAmount) Reset() {
	*x = MerchantResponseMonthlyAmount{}
	mi := &file_merchant_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantResponseMonthlyAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantResponseMonthlyAmount) ProtoMessage() {}

func (x *MerchantResponseMonthlyAmount) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantResponseMonthlyAmount.ProtoReflect.Descriptor instead.
func (*MerchantResponseMonthlyAmount) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{7}
}

func (x *MerchantResponseMonthlyAmount) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *MerchantResponseMonthlyAmount) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type MerchantResponseYearlyAmount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          string                 `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	TotalAmount   int64                  `protobuf:"varint,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantResponseYearlyAmount) Reset() {
	*x = MerchantResponseYearlyAmount{}
	mi := &file_merchant_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantResponseYearlyAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantResponseYearlyAmount) ProtoMessage() {}

func (x *MerchantResponseYearlyAmount) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantResponseYearlyAmount.ProtoReflect.Descriptor instead.
func (*MerchantResponseYearlyAmount) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{8}
}

func (x *MerchantResponseYearlyAmount) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *MerchantResponseYearlyAmount) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type MerchantResponseMonthlyTotalAmount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Month         string                 `protobuf:"bytes,1,opt,name=month,proto3" json:"month,omitempty"`
	Year          string                 `protobuf:"bytes,2,opt,name=year,proto3" json:"year,omitempty"`
	TotalAmount   int64                  `protobuf:"varint,3,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantResponseMonthlyTotalAmount) Reset() {
	*x = MerchantResponseMonthlyTotalAmount{}
	mi := &file_merchant_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantResponseMonthlyTotalAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantResponseMonthlyTotalAmount) ProtoMessage() {}

func (x *MerchantResponseMonthlyTotalAmount) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantResponseMonthlyTotalAmount.ProtoReflect.Descriptor instead.
func (*MerchantResponseMonthlyTotalAmount) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{9}
}

func (x *MerchantResponseMonthlyTotalAmount) GetMonth() string {
	if x != nil {
		return x.Month
	}
	return ""
}

func (x *MerchantResponseMonthlyTotalAmount) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *MerchantResponseMonthlyTotalAmount) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type MerchantResponseYearlyTotalAmount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          string                 `protobuf:"bytes,1,opt,name=year,proto3" json:"year,omitempty"`
	TotalAmount   int64                  `protobuf:"varint,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerchantResponseYearlyTotalAmount) Reset() {
	*x = MerchantResponseYearlyTotalAmount{}
	mi := &file_merchant_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerchantResponseYearlyTotalAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerchantResponseYearlyTotalAmount) ProtoMessage() {}

func (x *MerchantResponseYearlyTotalAmount) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerchantResponseYearlyTotalAmount.ProtoReflect.Descriptor instead.
func (*MerchantResponseYearlyTotalAmount) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{10}
}

func (x *MerchantResponseYearlyTotalAmount) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *MerchantResponseYearlyTotalAmount) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type ApiResponseMerchantMonthlyPaymentMethod struct {
	state         protoimpl.MessageState                  `protogen:"open.v1"`
	Status        string                                  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantResponseMonthlyPaymentMethod `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMerchantMonthlyPaymentMethod) Reset() {
	*x = ApiResponseMerchantMonthlyPaymentMethod{}
	mi := &file_merchant_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMerchantMonthlyPaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMerchantMonthlyPaymentMethod) ProtoMessage() {}

func (x *ApiResponseMerchantMonthlyPaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMerchantMonthlyPaymentMethod.ProtoReflect.Descriptor instead.
func (*ApiResponseMerchantMonthlyPaymentMethod) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{11}
}

func (x *ApiResponseMerchantMonthlyPaymentMethod) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMerchantMonthlyPaymentMethod) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseMerchantMonthlyPaymentMethod) GetData() []*MerchantResponseMonthlyPaymentMethod {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseMerchantYearlyPaymentMethod struct {
	state         protoimpl.MessageState                 `protogen:"open.v1"`
	Status        string                                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantResponseYearlyPaymentMethod `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMerchantYearlyPaymentMethod) Reset() {
	*x = ApiResponseMerchantYearlyPaymentMethod{}
	mi := &file_merchant_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMerchantYearlyPaymentMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMerchantYearlyPaymentMethod) ProtoMessage() {}

func (x *ApiResponseMerchantYearlyPaymentMethod) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMerchantYearlyPaymentMethod.ProtoReflect.Descriptor instead.
func (*ApiResponseMerchantYearlyPaymentMethod) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{12}
}

func (x *ApiResponseMerchantYearlyPaymentMethod) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMerchantYearlyPaymentMethod) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseMerchantYearlyPaymentMethod) GetData() []*MerchantResponseYearlyPaymentMethod {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseMerchantMonthlyAmount struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Status        string                           `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                           `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantResponseMonthlyAmount `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMerchantMonthlyAmount) Reset() {
	*x = ApiResponseMerchantMonthlyAmount{}
	mi := &file_merchant_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMerchantMonthlyAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMerchantMonthlyAmount) ProtoMessage() {}

func (x *ApiResponseMerchantMonthlyAmount) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMerchantMonthlyAmount.ProtoReflect.Descriptor instead.
func (*ApiResponseMerchantMonthlyAmount) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{13}
}

func (x *ApiResponseMerchantMonthlyAmount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMerchantMonthlyAmount) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseMerchantMonthlyAmount) GetData() []*MerchantResponseMonthlyAmount {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseMerchantYearlyAmount struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Status        string                          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantResponseYearlyAmount `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMerchantYearlyAmount) Reset() {
	*x = ApiResponseMerchantYearlyAmount{}
	mi := &file_merchant_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMerchantYearlyAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMerchantYearlyAmount) ProtoMessage() {}

func (x *ApiResponseMerchantYearlyAmount) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMerchantYearlyAmount.ProtoReflect.Descriptor instead.
func (*ApiResponseMerchantYearlyAmount) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{14}
}

func (x *ApiResponseMerchantYearlyAmount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMerchantYearlyAmount) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseMerchantYearlyAmount) GetData() []*MerchantResponseYearlyAmount {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseMerchantMonthlyTotalAmount struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Status        string                                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                                `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantResponseMonthlyTotalAmount `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMerchantMonthlyTotalAmount) Reset() {
	*x = ApiResponseMerchantMonthlyTotalAmount{}
	mi := &file_merchant_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMerchantMonthlyTotalAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMerchantMonthlyTotalAmount) ProtoMessage() {}

func (x *ApiResponseMerchantMonthlyTotalAmount) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMerchantMonthlyTotalAmount.ProtoReflect.Descriptor instead.
func (*ApiResponseMerchantMonthlyTotalAmount) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{15}
}

func (x *ApiResponseMerchantMonthlyTotalAmount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMerchantMonthlyTotalAmount) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseMerchantMonthlyTotalAmount) GetData() []*MerchantResponseMonthlyTotalAmount {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseMerchantYearlyTotalAmount struct {
	state         protoimpl.MessageState               `protogen:"open.v1"`
	Status        string                               `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                               `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantResponseYearlyTotalAmount `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMerchantYearlyTotalAmount) Reset() {
	*x = ApiResponseMerchantYearlyTotalAmount{}
	mi := &file_merchant_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMerchantYearlyTotalAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMerchantYearlyTotalAmount) ProtoMessage() {}

func (x *ApiResponseMerchantYearlyTotalAmount) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMerchantYearlyTotalAmount.ProtoReflect.Descriptor instead.
func (*ApiResponseMerchantYearlyTotalAmount) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{16}
}

func (x *ApiResponseMerchantYearlyTotalAmount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMerchantYearlyTotalAmount) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseMerchantYearlyTotalAmount) GetData() []*MerchantResponseYearlyTotalAmount {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponsesMerchant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantResponse    `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsesMerchant) Reset() {
	*x = ApiResponsesMerchant{}
	mi := &file_merchant_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsesMerchant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsesMerchant) ProtoMessage() {}

func (x *ApiResponsesMerchant) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsesMerchant.ProtoReflect.Descriptor instead.
func (*ApiResponsesMerchant) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{17}
}

func (x *ApiResponsesMerchant) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsesMerchant) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsesMerchant) GetData() []*MerchantResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseMerchant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          *MerchantResponse      `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMerchant) Reset() {
	*x = ApiResponseMerchant{}
	mi := &file_merchant_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMerchant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMerchant) ProtoMessage() {}

func (x *ApiResponseMerchant) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMerchant.ProtoReflect.Descriptor instead.
func (*ApiResponseMerchant) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{18}
}

func (x *ApiResponseMerchant) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMerchant) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponseMerchant) GetData() *MerchantResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ApiResponseMerchantDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMerchantDelete) Reset() {
	*x = ApiResponseMerchantDelete{}
	mi := &file_merchant_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMerchantDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMerchantDelete) ProtoMessage() {}

func (x *ApiResponseMerchantDelete) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMerchantDelete.ProtoReflect.Descriptor instead.
func (*ApiResponseMerchantDelete) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{19}
}

func (x *ApiResponseMerchantDelete) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMerchantDelete) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ApiResponseMerchantAll struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponseMerchantAll) Reset() {
	*x = ApiResponseMerchantAll{}
	mi := &file_merchant_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponseMerchantAll) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponseMerchantAll) ProtoMessage() {}

func (x *ApiResponseMerchantAll) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponseMerchantAll.ProtoReflect.Descriptor instead.
func (*ApiResponseMerchantAll) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{20}
}

func (x *ApiResponseMerchantAll) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponseMerchantAll) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ApiResponsePaginationMerchant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantResponse    `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *PaginationMeta        `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsePaginationMerchant) Reset() {
	*x = ApiResponsePaginationMerchant{}
	mi := &file_merchant_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsePaginationMerchant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsePaginationMerchant) ProtoMessage() {}

func (x *ApiResponsePaginationMerchant) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsePaginationMerchant.ProtoReflect.Descriptor instead.
func (*ApiResponsePaginationMerchant) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{21}
}

func (x *ApiResponsePaginationMerchant) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsePaginationMerchant) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsePaginationMerchant) GetData() []*MerchantResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiResponsePaginationMerchant) GetPagination() *PaginationMeta {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ApiResponsePaginationMerchantDeleteAt struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Status        string                      `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantResponseDeleteAt `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *PaginationMeta             `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsePaginationMerchantDeleteAt) Reset() {
	*x = ApiResponsePaginationMerchantDeleteAt{}
	mi := &file_merchant_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsePaginationMerchantDeleteAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsePaginationMerchantDeleteAt) ProtoMessage() {}

func (x *ApiResponsePaginationMerchantDeleteAt) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsePaginationMerchantDeleteAt.ProtoReflect.Descriptor instead.
func (*ApiResponsePaginationMerchantDeleteAt) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{22}
}

func (x *ApiResponsePaginationMerchantDeleteAt) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsePaginationMerchantDeleteAt) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsePaginationMerchantDeleteAt) GetData() []*MerchantResponseDeleteAt {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiResponsePaginationMerchantDeleteAt) GetPagination() *PaginationMeta {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ApiResponsePaginationMerchantTransaction struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Status        string                         `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                         `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data          []*MerchantTransactionResponse `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
	Pagination    *PaginationMeta                `protobuf:"bytes,4,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiResponsePaginationMerchantTransaction) Reset() {
	*x = ApiResponsePaginationMerchantTransaction{}
	mi := &file_merchant_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiResponsePaginationMerchantTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiResponsePaginationMerchantTransaction) ProtoMessage() {}

func (x *ApiResponsePaginationMerchantTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiResponsePaginationMerchantTransaction.ProtoReflect.Descriptor instead.
func (*ApiResponsePaginationMerchantTransaction) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{23}
}

func (x *ApiResponsePaginationMerchantTransaction) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ApiResponsePaginationMerchantTransaction) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ApiResponsePaginationMerchantTransaction) GetData() []*MerchantTransactionResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ApiResponsePaginationMerchantTransaction) GetPagination() *PaginationMeta {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type FindAllMerchantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search        string                 `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllMerchantRequest) Reset() {
	*x = FindAllMerchantRequest{}
	mi := &file_merchant_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllMerchantRequest) ProtoMessage() {}

func (x *FindAllMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllMerchantRequest.ProtoReflect.Descriptor instead.
func (*FindAllMerchantRequest) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{24}
}

func (x *FindAllMerchantRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAllMerchantRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindAllMerchantRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type FindAllMerchantTransaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search        string                 `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	MerchantId    int32                  `protobuf:"varint,4,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllMerchantTransaction) Reset() {
	*x = FindAllMerchantTransaction{}
	mi := &file_merchant_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllMerchantTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllMerchantTransaction) ProtoMessage() {}

func (x *FindAllMerchantTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllMerchantTransaction.ProtoReflect.Descriptor instead.
func (*FindAllMerchantTransaction) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{25}
}

func (x *FindAllMerchantTransaction) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAllMerchantTransaction) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindAllMerchantTransaction) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *FindAllMerchantTransaction) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

type FindAllMerchantApikey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Search        string                 `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
	ApiKey        string                 `protobuf:"bytes,4,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindAllMerchantApikey) Reset() {
	*x = FindAllMerchantApikey{}
	mi := &file_merchant_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindAllMerchantApikey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllMerchantApikey) ProtoMessage() {}

func (x *FindAllMerchantApikey) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllMerchantApikey.ProtoReflect.Descriptor instead.
func (*FindAllMerchantApikey) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{26}
}

func (x *FindAllMerchantApikey) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FindAllMerchantApikey) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FindAllMerchantApikey) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *FindAllMerchantApikey) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type FindByIdMerchantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantId    int32                  `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByIdMerchantRequest) Reset() {
	*x = FindByIdMerchantRequest{}
	mi := &file_merchant_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByIdMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByIdMerchantRequest) ProtoMessage() {}

func (x *FindByIdMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByIdMerchantRequest.ProtoReflect.Descriptor instead.
func (*FindByIdMerchantRequest) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{27}
}

func (x *FindByIdMerchantRequest) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

type FindByApiKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApiKey        string                 `protobuf:"bytes,1,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByApiKeyRequest) Reset() {
	*x = FindByApiKeyRequest{}
	mi := &file_merchant_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByApiKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByApiKeyRequest) ProtoMessage() {}

func (x *FindByApiKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByApiKeyRequest.ProtoReflect.Descriptor instead.
func (*FindByApiKeyRequest) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{28}
}

func (x *FindByApiKeyRequest) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

type FindByMerchantUserIdRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindByMerchantUserIdRequest) Reset() {
	*x = FindByMerchantUserIdRequest{}
	mi := &file_merchant_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindByMerchantUserIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindByMerchantUserIdRequest) ProtoMessage() {}

func (x *FindByMerchantUserIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindByMerchantUserIdRequest.ProtoReflect.Descriptor instead.
func (*FindByMerchantUserIdRequest) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{29}
}

func (x *FindByMerchantUserIdRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type TrashedMerchantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantId    int32                  `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrashedMerchantRequest) Reset() {
	*x = TrashedMerchantRequest{}
	mi := &file_merchant_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrashedMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrashedMerchantRequest) ProtoMessage() {}

func (x *TrashedMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrashedMerchantRequest.ProtoReflect.Descriptor instead.
func (*TrashedMerchantRequest) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{30}
}

func (x *TrashedMerchantRequest) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

type RestoreMerchantRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantId    int32                  `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreMerchantRequest) Reset() {
	*x = RestoreMerchantRequest{}
	mi := &file_merchant_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreMerchantRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreMerchantRequest) ProtoMessage() {}

func (x *RestoreMerchantRequest) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreMerchantRequest.ProtoReflect.Descriptor instead.
func (*RestoreMerchantRequest) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{31}
}

func (x *RestoreMerchantRequest) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

type FindYearMerchant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          int32                  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindYearMerchant) Reset() {
	*x = FindYearMerchant{}
	mi := &file_merchant_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindYearMerchant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindYearMerchant) ProtoMessage() {}

func (x *FindYearMerchant) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindYearMerchant.ProtoReflect.Descriptor instead.
func (*FindYearMerchant) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{32}
}

func (x *FindYearMerchant) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

type FindYearMerchantById struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          int32                  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	MerchantId    int32                  `protobuf:"varint,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindYearMerchantById) Reset() {
	*x = FindYearMerchantById{}
	mi := &file_merchant_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindYearMerchantById) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindYearMerchantById) ProtoMessage() {}

func (x *FindYearMerchantById) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindYearMerchantById.ProtoReflect.Descriptor instead.
func (*FindYearMerchantById) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{33}
}

func (x *FindYearMerchantById) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *FindYearMerchantById) GetMerchantId() int32 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

type FindYearMerchantByApikey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Year          int32                  `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	ApiKey        string                 `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindYearMerchantByApikey) Reset() {
	*x = FindYearMerchantByApikey{}
	mi := &file_merchant_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindYearMerchantByApikey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindYearMerchantByApikey) ProtoMessage() {}

func (x *FindYearMerchantByApikey) ProtoReflect() protoreflect.Message {
	mi := &file_merchant_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindYearMerchantByApikey.ProtoReflect.Descriptor instead.
func (*FindYearMerchantByApikey) Descriptor() ([]byte, []int) {
	return file_merchant_proto_rawDescGZIP(), []int{34}
}

func (x *FindYearMerchantByApikey) GetYear() int32 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *FindYearMerchantByApikey) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

var File_merchant_proto protoreflect.FileDescriptor

const file_merchant_proto_rawDesc = "" +
	"\n" +
	"\x0emerchant.proto\x12\x02pb\x1a\x1egoogle/protobuf/wrappers.proto\x1a\tapi.proto\x1a\x1bgoogle/protobuf/empty.proto\"D\n" +
	"\x15CreateMerchantRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\"}\n" +
	"\x15UpdateMerchantRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\x05R\n" +
	"merchantId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x05R\x06userId\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\xbe\x01\n" +
	"\x10MerchantResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\aapi_key\x18\x03 \x01(\tR\x06apiKey\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x05R\x06userId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\tR\tupdatedAt\"\x83\x02\n" +
	"\x18MerchantResponseDeleteAt\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x17\n" +
	"\aapi_key\x18\x03 \x01(\tR\x06apiKey\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\x05R\x06userId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\tR\tupdatedAt\x12;\n" +
	"\n" +
	"deleted_at\x18\b \x01(\v2\x1c.google.protobuf.StringValueR\tdeletedAt\"\xf9\x02\n" +
	"\x1bMerchantTransactionResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x1f\n" +
	"\vcard_number\x18\x02 \x01(\tR\n" +
	"cardNumber\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x05R\x06amount\x12%\n" +
	"\x0epayment_method\x18\x04 \x01(\tR\rpaymentMethod\x12\x1f\n" +
	"\vmerchant_id\x18\x05 \x01(\x05R\n" +
	"merchantId\x12#\n" +
	"\rmerchant_name\x18\x06 \x01(\tR\fmerchantName\x12)\n" +
	"\x10transaction_time\x18\a \x01(\tR\x0ftransactionTime\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\tR\tupdatedAt\x12;\n" +
	"\n" +
	"deleted_at\x18\n" +
	" \x01(\v2\x1c.google.protobuf.StringValueR\tdeletedAt\"\x86\x01\n" +
	"$MerchantResponseMonthlyPaymentMethod\x12\x14\n" +
	"\x05month\x18\x01 \x01(\tR\x05month\x12%\n" +
	"\x0epayment_method\x18\x02 \x01(\tR\rpaymentMethod\x12!\n" +
	"\ftotal_amount\x18\x03 \x01(\x03R\vtotalAmount\"\x83\x01\n" +
	"#MerchantResponseYearlyPaymentMethod\x12\x12\n" +
	"\x04year\x18\x01 \x01(\tR\x04year\x12%\n" +
	"\x0epayment_method\x18\x02 \x01(\tR\rpaymentMethod\x12!\n" +
	"\ftotal_amount\x18\x03 \x01(\x03R\vtotalAmount\"X\n" +
	"\x1dMerchantResponseMonthlyAmount\x12\x14\n" +
	"\x05month\x18\x01 \x01(\tR\x05month\x12!\n" +
	"\ftotal_amount\x18\x02 \x01(\x03R\vtotalAmount\"U\n" +
	"\x1cMerchantResponseYearlyAmount\x12\x12\n" +
	"\x04year\x18\x01 \x01(\tR\x04year\x12!\n" +
	"\ftotal_amount\x18\x02 \x01(\x03R\vtotalAmount\"q\n" +
	"\"MerchantResponseMonthlyTotalAmount\x12\x14\n" +
	"\x05month\x18\x01 \x01(\tR\x05month\x12\x12\n" +
	"\x04year\x18\x02 \x01(\tR\x04year\x12!\n" +
	"\ftotal_amount\x18\x03 \x01(\x03R\vtotalAmount\"Z\n" +
	"!MerchantResponseYearlyTotalAmount\x12\x12\n" +
	"\x04year\x18\x01 \x01(\tR\x04year\x12!\n" +
	"\ftotal_amount\x18\x02 \x01(\x03R\vtotalAmount\"\x99\x01\n" +
	"'ApiResponseMerchantMonthlyPaymentMethod\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12<\n" +
	"\x04data\x18\x03 \x03(\v2(.pb.MerchantResponseMonthlyPaymentMethodR\x04data\"\x97\x01\n" +
	"&ApiResponseMerchantYearlyPaymentMethod\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12;\n" +
	"\x04data\x18\x03 \x03(\v2'.pb.MerchantResponseYearlyPaymentMethodR\x04data\"\x8b\x01\n" +
	" ApiResponseMerchantMonthlyAmount\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x125\n" +
	"\x04data\x18\x03 \x03(\v2!.pb.MerchantResponseMonthlyAmountR\x04data\"\x89\x01\n" +
	"\x1fApiResponseMerchantYearlyAmount\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x124\n" +
	"\x04data\x18\x03 \x03(\v2 .pb.MerchantResponseYearlyAmountR\x04data\"\x95\x01\n" +
	"%ApiResponseMerchantMonthlyTotalAmount\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12:\n" +
	"\x04data\x18\x03 \x03(\v2&.pb.MerchantResponseMonthlyTotalAmountR\x04data\"\x93\x01\n" +
	"$ApiResponseMerchantYearlyTotalAmount\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x129\n" +
	"\x04data\x18\x03 \x03(\v2%.pb.MerchantResponseYearlyTotalAmountR\x04data\"r\n" +
	"\x14ApiResponsesMerchant\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x04data\x18\x03 \x03(\v2\x14.pb.MerchantResponseR\x04data\"q\n" +
	"\x13ApiResponseMerchant\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x04data\x18\x03 \x01(\v2\x14.pb.MerchantResponseR\x04data\"M\n" +
	"\x19ApiResponseMerchantDelete\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"J\n" +
	"\x16ApiResponseMerchantAll\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xaf\x01\n" +
	"\x1dApiResponsePaginationMerchant\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12(\n" +
	"\x04data\x18\x03 \x03(\v2\x14.pb.MerchantResponseR\x04data\x122\n" +
	"\n" +
	"pagination\x18\x04 \x01(\v2\x12.pb.PaginationMetaR\n" +
	"pagination\"\xbf\x01\n" +
	"%ApiResponsePaginationMerchantDeleteAt\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x120\n" +
	"\x04data\x18\x03 \x03(\v2\x1c.pb.MerchantResponseDeleteAtR\x04data\x122\n" +
	"\n" +
	"pagination\x18\x04 \x01(\v2\x12.pb.PaginationMetaR\n" +
	"pagination\"\xc5\x01\n" +
	"(ApiResponsePaginationMerchantTransaction\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x123\n" +
	"\x04data\x18\x03 \x03(\v2\x1f.pb.MerchantTransactionResponseR\x04data\x122\n" +
	"\n" +
	"pagination\x18\x04 \x01(\v2\x12.pb.PaginationMetaR\n" +
	"pagination\"a\n" +
	"\x16FindAllMerchantRequest\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x16\n" +
	"\x06search\x18\x03 \x01(\tR\x06search\"\x86\x01\n" +
	"\x1aFindAllMerchantTransaction\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x16\n" +
	"\x06search\x18\x03 \x01(\tR\x06search\x12\x1f\n" +
	"\vmerchant_id\x18\x04 \x01(\x05R\n" +
	"merchantId\"y\n" +
	"\x15FindAllMerchantApikey\x12\x12\n" +
	"\x04page\x18\x01 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x16\n" +
	"\x06search\x18\x03 \x01(\tR\x06search\x12\x17\n" +
	"\aapi_key\x18\x04 \x01(\tR\x06apiKey\":\n" +
	"\x17FindByIdMerchantRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\x05R\n" +
	"merchantId\".\n" +
	"\x13FindByApiKeyRequest\x12\x17\n" +
	"\aapi_key\x18\x01 \x01(\tR\x06apiKey\"6\n" +
	"\x1bFindByMerchantUserIdRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"9\n" +
	"\x16TrashedMerchantRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\x05R\n" +
	"merchantId\"9\n" +
	"\x16RestoreMerchantRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\x05R\n" +
	"merchantId\"&\n" +
	"\x10FindYearMerchant\x12\x12\n" +
	"\x04year\x18\x01 \x01(\x05R\x04year\"K\n" +
	"\x14FindYearMerchantById\x12\x12\n" +
	"\x04year\x18\x01 \x01(\x05R\x04year\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\x05R\n" +
	"merchantId\"G\n" +
	"\x18FindYearMerchantByApikey\x12\x12\n" +
	"\x04year\x18\x01 \x01(\x05R\x04year\x12\x17\n" +
	"\aapi_key\x18\x02 \x01(\tR\x06apiKey2\x9e\x19\n" +
	"\x0fMerchantService\x12R\n" +
	"\x0fFindAllMerchant\x12\x1a.pb.FindAllMerchantRequest\x1a!.pb.ApiResponsePaginationMerchant\"\x00\x12J\n" +
	"\x10FindByIdMerchant\x12\x1b.pb.FindByIdMerchantRequest\x1a\x17.pb.ApiResponseMerchant\"\x00\x12B\n" +
	"\fFindByApiKey\x12\x17.pb.FindByApiKeyRequest\x1a\x17.pb.ApiResponseMerchant\"\x00\x12h\n" +
	"\x1aFindAllTransactionMerchant\x12\x1a.pb.FindAllMerchantRequest\x1a,.pb.ApiResponsePaginationMerchantTransaction\"\x00\x12h\n" +
	"!FindMonthlyPaymentMethodsMerchant\x12\x14.pb.FindYearMerchant\x1a+.pb.ApiResponseMerchantMonthlyPaymentMethod\"\x00\x12e\n" +
	"\x1fFindYearlyPaymentMethodMerchant\x12\x14.pb.FindYearMerchant\x1a*.pb.ApiResponseMerchantYearlyPaymentMethod\"\x00\x12Y\n" +
	"\x19FindMonthlyAmountMerchant\x12\x14.pb.FindYearMerchant\x1a$.pb.ApiResponseMerchantMonthlyAmount\"\x00\x12W\n" +
	"\x18FindYearlyAmountMerchant\x12\x14.pb.FindYearMerchant\x1a#.pb.ApiResponseMerchantYearlyAmount\"\x00\x12c\n" +
	"\x1eFindMonthlyTotalAmountMerchant\x12\x14.pb.FindYearMerchant\x1a).pb.ApiResponseMerchantMonthlyTotalAmount\"\x00\x12a\n" +
	"\x1dFindYearlyTotalAmountMerchant\x12\x14.pb.FindYearMerchant\x1a(.pb.ApiResponseMerchantYearlyTotalAmount\"\x00\x12n\n" +
	"\x1cFindAllTransactionByMerchant\x12\x1e.pb.FindAllMerchantTransaction\x1a,.pb.ApiResponsePaginationMerchantTransaction\"\x00\x12n\n" +
	"#FindMonthlyPaymentMethodByMerchants\x12\x18.pb.FindYearMerchantById\x1a+.pb.ApiResponseMerchantMonthlyPaymentMethod\"\x00\x12l\n" +
	"\"FindYearlyPaymentMethodByMerchants\x12\x18.pb.FindYearMerchantById\x1a*.pb.ApiResponseMerchantYearlyPaymentMethod\"\x00\x12`\n" +
	"\x1cFindMonthlyAmountByMerchants\x12\x18.pb.FindYearMerchantById\x1a$.pb.ApiResponseMerchantMonthlyAmount\"\x00\x12^\n" +
	"\x1bFindYearlyAmountByMerchants\x12\x18.pb.FindYearMerchantById\x1a#.pb.ApiResponseMerchantYearlyAmount\"\x00\x12j\n" +
	"!FindMonthlyTotalAmountByMerchants\x12\x18.pb.FindYearMerchantById\x1a).pb.ApiResponseMerchantMonthlyTotalAmount\"\x00\x12h\n" +
	" FindYearlyTotalAmountByMerchants\x12\x18.pb.FindYearMerchantById\x1a(.pb.ApiResponseMerchantYearlyTotalAmount\"\x00\x12g\n" +
	"\x1aFindAllTransactionByApikey\x12\x19.pb.FindAllMerchantApikey\x1a,.pb.ApiResponsePaginationMerchantTransaction\"\x00\x12o\n" +
	" FindMonthlyPaymentMethodByApikey\x12\x1c.pb.FindYearMerchantByApikey\x1a+.pb.ApiResponseMerchantMonthlyPaymentMethod\"\x00\x12m\n" +
	"\x1fFindYearlyPaymentMethodByApikey\x12\x1c.pb.FindYearMerchantByApikey\x1a*.pb.ApiResponseMerchantYearlyPaymentMethod\"\x00\x12a\n" +
	"\x19FindMonthlyAmountByApikey\x12\x1c.pb.FindYearMerchantByApikey\x1a$.pb.ApiResponseMerchantMonthlyAmount\"\x00\x12_\n" +
	"\x18FindYearlyAmountByApikey\x12\x1c.pb.FindYearMerchantByApikey\x1a#.pb.ApiResponseMerchantYearlyAmount\"\x00\x12k\n" +
	"\x1eFindMonthlyTotalAmountByApikey\x12\x1c.pb.FindYearMerchantByApikey\x1a).pb.ApiResponseMerchantMonthlyTotalAmount\"\x00\x12i\n" +
	"\x1dFindYearlyTotalAmountByApikey\x12\x1c.pb.FindYearMerchantByApikey\x1a(.pb.ApiResponseMerchantYearlyTotalAmount\"\x00\x12S\n" +
	"\x14FindByMerchantUserId\x12\x1f.pb.FindByMerchantUserIdRequest\x1a\x18.pb.ApiResponsesMerchant\"\x00\x12W\n" +
	"\fFindByActive\x12\x1a.pb.FindAllMerchantRequest\x1a).pb.ApiResponsePaginationMerchantDeleteAt\"\x00\x12X\n" +
	"\rFindByTrashed\x12\x1a.pb.FindAllMerchantRequest\x1a).pb.ApiResponsePaginationMerchantDeleteAt\"\x00\x12F\n" +
	"\x0eCreateMerchant\x12\x19.pb.CreateMerchantRequest\x1a\x17.pb.ApiResponseMerchant\"\x00\x12F\n" +
	"\x0eUpdateMerchant\x12\x19.pb.UpdateMerchantRequest\x1a\x17.pb.ApiResponseMerchant\"\x00\x12I\n" +
	"\x0fTrashedMerchant\x12\x1b.pb.FindByIdMerchantRequest\x1a\x17.pb.ApiResponseMerchant\"\x00\x12I\n" +
	"\x0fRestoreMerchant\x12\x1b.pb.FindByIdMerchantRequest\x1a\x17.pb.ApiResponseMerchant\"\x00\x12W\n" +
	"\x17DeleteMerchantPermanent\x12\x1b.pb.FindByIdMerchantRequest\x1a\x1d.pb.ApiResponseMerchantDelete\"\x00\x12J\n" +
	"\x12RestoreAllMerchant\x12\x16.google.protobuf.Empty\x1a\x1a.pb.ApiResponseMerchantAll\"\x00\x12R\n" +
	"\x1aDeleteAllMerchantPermanent\x12\x16.google.protobuf.Empty\x1a\x1a.pb.ApiResponseMerchantAll\"\x00B+Z)MamangRust/paymentgatewaygrpc/internal/pbb\x06proto3"

var (
	file_merchant_proto_rawDescOnce sync.Once
	file_merchant_proto_rawDescData []byte
)

func file_merchant_proto_rawDescGZIP() []byte {
	file_merchant_proto_rawDescOnce.Do(func() {
		file_merchant_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_merchant_proto_rawDesc), len(file_merchant_proto_rawDesc)))
	})
	return file_merchant_proto_rawDescData
}

var file_merchant_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_merchant_proto_goTypes = []any{
	(*CreateMerchantRequest)(nil),                    // 0: pb.CreateMerchantRequest
	(*UpdateMerchantRequest)(nil),                    // 1: pb.UpdateMerchantRequest
	(*MerchantResponse)(nil),                         // 2: pb.MerchantResponse
	(*MerchantResponseDeleteAt)(nil),                 // 3: pb.MerchantResponseDeleteAt
	(*MerchantTransactionResponse)(nil),              // 4: pb.MerchantTransactionResponse
	(*MerchantResponseMonthlyPaymentMethod)(nil),     // 5: pb.MerchantResponseMonthlyPaymentMethod
	(*MerchantResponseYearlyPaymentMethod)(nil),      // 6: pb.MerchantResponseYearlyPaymentMethod
	(*MerchantResponseMonthlyAmount)(nil),            // 7: pb.MerchantResponseMonthlyAmount
	(*MerchantResponseYearlyAmount)(nil),             // 8: pb.MerchantResponseYearlyAmount
	(*MerchantResponseMonthlyTotalAmount)(nil),       // 9: pb.MerchantResponseMonthlyTotalAmount
	(*MerchantResponseYearlyTotalAmount)(nil),        // 10: pb.MerchantResponseYearlyTotalAmount
	(*ApiResponseMerchantMonthlyPaymentMethod)(nil),  // 11: pb.ApiResponseMerchantMonthlyPaymentMethod
	(*ApiResponseMerchantYearlyPaymentMethod)(nil),   // 12: pb.ApiResponseMerchantYearlyPaymentMethod
	(*ApiResponseMerchantMonthlyAmount)(nil),         // 13: pb.ApiResponseMerchantMonthlyAmount
	(*ApiResponseMerchantYearlyAmount)(nil),          // 14: pb.ApiResponseMerchantYearlyAmount
	(*ApiResponseMerchantMonthlyTotalAmount)(nil),    // 15: pb.ApiResponseMerchantMonthlyTotalAmount
	(*ApiResponseMerchantYearlyTotalAmount)(nil),     // 16: pb.ApiResponseMerchantYearlyTotalAmount
	(*ApiResponsesMerchant)(nil),                     // 17: pb.ApiResponsesMerchant
	(*ApiResponseMerchant)(nil),                      // 18: pb.ApiResponseMerchant
	(*ApiResponseMerchantDelete)(nil),                // 19: pb.ApiResponseMerchantDelete
	(*ApiResponseMerchantAll)(nil),                   // 20: pb.ApiResponseMerchantAll
	(*ApiResponsePaginationMerchant)(nil),            // 21: pb.ApiResponsePaginationMerchant
	(*ApiResponsePaginationMerchantDeleteAt)(nil),    // 22: pb.ApiResponsePaginationMerchantDeleteAt
	(*ApiResponsePaginationMerchantTransaction)(nil), // 23: pb.ApiResponsePaginationMerchantTransaction
	(*FindAllMerchantRequest)(nil),                   // 24: pb.FindAllMerchantRequest
	(*FindAllMerchantTransaction)(nil),               // 25: pb.FindAllMerchantTransaction
	(*FindAllMerchantApikey)(nil),                    // 26: pb.FindAllMerchantApikey
	(*FindByIdMerchantRequest)(nil),                  // 27: pb.FindByIdMerchantRequest
	(*FindByApiKeyRequest)(nil),                      // 28: pb.FindByApiKeyRequest
	(*FindByMerchantUserIdRequest)(nil),              // 29: pb.FindByMerchantUserIdRequest
	(*TrashedMerchantRequest)(nil),                   // 30: pb.TrashedMerchantRequest
	(*RestoreMerchantRequest)(nil),                   // 31: pb.RestoreMerchantRequest
	(*FindYearMerchant)(nil),                         // 32: pb.FindYearMerchant
	(*FindYearMerchantById)(nil),                     // 33: pb.FindYearMerchantById
	(*FindYearMerchantByApikey)(nil),                 // 34: pb.FindYearMerchantByApikey
	(*wrapperspb.StringValue)(nil),                   // 35: google.protobuf.StringValue
	(*PaginationMeta)(nil),                           // 36: pb.PaginationMeta
	(*emptypb.Empty)(nil),                            // 37: google.protobuf.Empty
}
var file_merchant_proto_depIdxs = []int32{
	35, // 0: pb.MerchantResponseDeleteAt.deleted_at:type_name -> google.protobuf.StringValue
	35, // 1: pb.MerchantTransactionResponse.deleted_at:type_name -> google.protobuf.StringValue
	5,  // 2: pb.ApiResponseMerchantMonthlyPaymentMethod.data:type_name -> pb.MerchantResponseMonthlyPaymentMethod
	6,  // 3: pb.ApiResponseMerchantYearlyPaymentMethod.data:type_name -> pb.MerchantResponseYearlyPaymentMethod
	7,  // 4: pb.ApiResponseMerchantMonthlyAmount.data:type_name -> pb.MerchantResponseMonthlyAmount
	8,  // 5: pb.ApiResponseMerchantYearlyAmount.data:type_name -> pb.MerchantResponseYearlyAmount
	9,  // 6: pb.ApiResponseMerchantMonthlyTotalAmount.data:type_name -> pb.MerchantResponseMonthlyTotalAmount
	10, // 7: pb.ApiResponseMerchantYearlyTotalAmount.data:type_name -> pb.MerchantResponseYearlyTotalAmount
	2,  // 8: pb.ApiResponsesMerchant.data:type_name -> pb.MerchantResponse
	2,  // 9: pb.ApiResponseMerchant.data:type_name -> pb.MerchantResponse
	2,  // 10: pb.ApiResponsePaginationMerchant.data:type_name -> pb.MerchantResponse
	36, // 11: pb.ApiResponsePaginationMerchant.pagination:type_name -> pb.PaginationMeta
	3,  // 12: pb.ApiResponsePaginationMerchantDeleteAt.data:type_name -> pb.MerchantResponseDeleteAt
	36, // 13: pb.ApiResponsePaginationMerchantDeleteAt.pagination:type_name -> pb.PaginationMeta
	4,  // 14: pb.ApiResponsePaginationMerchantTransaction.data:type_name -> pb.MerchantTransactionResponse
	36, // 15: pb.ApiResponsePaginationMerchantTransaction.pagination:type_name -> pb.PaginationMeta
	24, // 16: pb.MerchantService.FindAllMerchant:input_type -> pb.FindAllMerchantRequest
	27, // 17: pb.MerchantService.FindByIdMerchant:input_type -> pb.FindByIdMerchantRequest
	28, // 18: pb.MerchantService.FindByApiKey:input_type -> pb.FindByApiKeyRequest
	24, // 19: pb.MerchantService.FindAllTransactionMerchant:input_type -> pb.FindAllMerchantRequest
	32, // 20: pb.MerchantService.FindMonthlyPaymentMethodsMerchant:input_type -> pb.FindYearMerchant
	32, // 21: pb.MerchantService.FindYearlyPaymentMethodMerchant:input_type -> pb.FindYearMerchant
	32, // 22: pb.MerchantService.FindMonthlyAmountMerchant:input_type -> pb.FindYearMerchant
	32, // 23: pb.MerchantService.FindYearlyAmountMerchant:input_type -> pb.FindYearMerchant
	32, // 24: pb.MerchantService.FindMonthlyTotalAmountMerchant:input_type -> pb.FindYearMerchant
	32, // 25: pb.MerchantService.FindYearlyTotalAmountMerchant:input_type -> pb.FindYearMerchant
	25, // 26: pb.MerchantService.FindAllTransactionByMerchant:input_type -> pb.FindAllMerchantTransaction
	33, // 27: pb.MerchantService.FindMonthlyPaymentMethodByMerchants:input_type -> pb.FindYearMerchantById
	33, // 28: pb.MerchantService.FindYearlyPaymentMethodByMerchants:input_type -> pb.FindYearMerchantById
	33, // 29: pb.MerchantService.FindMonthlyAmountByMerchants:input_type -> pb.FindYearMerchantById
	33, // 30: pb.MerchantService.FindYearlyAmountByMerchants:input_type -> pb.FindYearMerchantById
	33, // 31: pb.MerchantService.FindMonthlyTotalAmountByMerchants:input_type -> pb.FindYearMerchantById
	33, // 32: pb.MerchantService.FindYearlyTotalAmountByMerchants:input_type -> pb.FindYearMerchantById
	26, // 33: pb.MerchantService.FindAllTransactionByApikey:input_type -> pb.FindAllMerchantApikey
	34, // 34: pb.MerchantService.FindMonthlyPaymentMethodByApikey:input_type -> pb.FindYearMerchantByApikey
	34, // 35: pb.MerchantService.FindYearlyPaymentMethodByApikey:input_type -> pb.FindYearMerchantByApikey
	34, // 36: pb.MerchantService.FindMonthlyAmountByApikey:input_type -> pb.FindYearMerchantByApikey
	34, // 37: pb.MerchantService.FindYearlyAmountByApikey:input_type -> pb.FindYearMerchantByApikey
	34, // 38: pb.MerchantService.FindMonthlyTotalAmountByApikey:input_type -> pb.FindYearMerchantByApikey
	34, // 39: pb.MerchantService.FindYearlyTotalAmountByApikey:input_type -> pb.FindYearMerchantByApikey
	29, // 40: pb.MerchantService.FindByMerchantUserId:input_type -> pb.FindByMerchantUserIdRequest
	24, // 41: pb.MerchantService.FindByActive:input_type -> pb.FindAllMerchantRequest
	24, // 42: pb.MerchantService.FindByTrashed:input_type -> pb.FindAllMerchantRequest
	0,  // 43: pb.MerchantService.CreateMerchant:input_type -> pb.CreateMerchantRequest
	1,  // 44: pb.MerchantService.UpdateMerchant:input_type -> pb.UpdateMerchantRequest
	27, // 45: pb.MerchantService.TrashedMerchant:input_type -> pb.FindByIdMerchantRequest
	27, // 46: pb.MerchantService.RestoreMerchant:input_type -> pb.FindByIdMerchantRequest
	27, // 47: pb.MerchantService.DeleteMerchantPermanent:input_type -> pb.FindByIdMerchantRequest
	37, // 48: pb.MerchantService.RestoreAllMerchant:input_type -> google.protobuf.Empty
	37, // 49: pb.MerchantService.DeleteAllMerchantPermanent:input_type -> google.protobuf.Empty
	21, // 50: pb.MerchantService.FindAllMerchant:output_type -> pb.ApiResponsePaginationMerchant
	18, // 51: pb.MerchantService.FindByIdMerchant:output_type -> pb.ApiResponseMerchant
	18, // 52: pb.MerchantService.FindByApiKey:output_type -> pb.ApiResponseMerchant
	23, // 53: pb.MerchantService.FindAllTransactionMerchant:output_type -> pb.ApiResponsePaginationMerchantTransaction
	11, // 54: pb.MerchantService.FindMonthlyPaymentMethodsMerchant:output_type -> pb.ApiResponseMerchantMonthlyPaymentMethod
	12, // 55: pb.MerchantService.FindYearlyPaymentMethodMerchant:output_type -> pb.ApiResponseMerchantYearlyPaymentMethod
	13, // 56: pb.MerchantService.FindMonthlyAmountMerchant:output_type -> pb.ApiResponseMerchantMonthlyAmount
	14, // 57: pb.MerchantService.FindYearlyAmountMerchant:output_type -> pb.ApiResponseMerchantYearlyAmount
	15, // 58: pb.MerchantService.FindMonthlyTotalAmountMerchant:output_type -> pb.ApiResponseMerchantMonthlyTotalAmount
	16, // 59: pb.MerchantService.FindYearlyTotalAmountMerchant:output_type -> pb.ApiResponseMerchantYearlyTotalAmount
	23, // 60: pb.MerchantService.FindAllTransactionByMerchant:output_type -> pb.ApiResponsePaginationMerchantTransaction
	11, // 61: pb.MerchantService.FindMonthlyPaymentMethodByMerchants:output_type -> pb.ApiResponseMerchantMonthlyPaymentMethod
	12, // 62: pb.MerchantService.FindYearlyPaymentMethodByMerchants:output_type -> pb.ApiResponseMerchantYearlyPaymentMethod
	13, // 63: pb.MerchantService.FindMonthlyAmountByMerchants:output_type -> pb.ApiResponseMerchantMonthlyAmount
	14, // 64: pb.MerchantService.FindYearlyAmountByMerchants:output_type -> pb.ApiResponseMerchantYearlyAmount
	15, // 65: pb.MerchantService.FindMonthlyTotalAmountByMerchants:output_type -> pb.ApiResponseMerchantMonthlyTotalAmount
	16, // 66: pb.MerchantService.FindYearlyTotalAmountByMerchants:output_type -> pb.ApiResponseMerchantYearlyTotalAmount
	23, // 67: pb.MerchantService.FindAllTransactionByApikey:output_type -> pb.ApiResponsePaginationMerchantTransaction
	11, // 68: pb.MerchantService.FindMonthlyPaymentMethodByApikey:output_type -> pb.ApiResponseMerchantMonthlyPaymentMethod
	12, // 69: pb.MerchantService.FindYearlyPaymentMethodByApikey:output_type -> pb.ApiResponseMerchantYearlyPaymentMethod
	13, // 70: pb.MerchantService.FindMonthlyAmountByApikey:output_type -> pb.ApiResponseMerchantMonthlyAmount
	14, // 71: pb.MerchantService.FindYearlyAmountByApikey:output_type -> pb.ApiResponseMerchantYearlyAmount
	15, // 72: pb.MerchantService.FindMonthlyTotalAmountByApikey:output_type -> pb.ApiResponseMerchantMonthlyTotalAmount
	16, // 73: pb.MerchantService.FindYearlyTotalAmountByApikey:output_type -> pb.ApiResponseMerchantYearlyTotalAmount
	17, // 74: pb.MerchantService.FindByMerchantUserId:output_type -> pb.ApiResponsesMerchant
	22, // 75: pb.MerchantService.FindByActive:output_type -> pb.ApiResponsePaginationMerchantDeleteAt
	22, // 76: pb.MerchantService.FindByTrashed:output_type -> pb.ApiResponsePaginationMerchantDeleteAt
	18, // 77: pb.MerchantService.CreateMerchant:output_type -> pb.ApiResponseMerchant
	18, // 78: pb.MerchantService.UpdateMerchant:output_type -> pb.ApiResponseMerchant
	18, // 79: pb.MerchantService.TrashedMerchant:output_type -> pb.ApiResponseMerchant
	18, // 80: pb.MerchantService.RestoreMerchant:output_type -> pb.ApiResponseMerchant
	19, // 81: pb.MerchantService.DeleteMerchantPermanent:output_type -> pb.ApiResponseMerchantDelete
	20, // 82: pb.MerchantService.RestoreAllMerchant:output_type -> pb.ApiResponseMerchantAll
	20, // 83: pb.MerchantService.DeleteAllMerchantPermanent:output_type -> pb.ApiResponseMerchantAll
	50, // [50:84] is the sub-list for method output_type
	16, // [16:50] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_merchant_proto_init() }
func file_merchant_proto_init() {
	if File_merchant_proto != nil {
		return
	}
	file_api_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_merchant_proto_rawDesc), len(file_merchant_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_merchant_proto_goTypes,
		DependencyIndexes: file_merchant_proto_depIdxs,
		MessageInfos:      file_merchant_proto_msgTypes,
	}.Build()
	File_merchant_proto = out.File
	file_merchant_proto_goTypes = nil
	file_merchant_proto_depIdxs = nil
}
